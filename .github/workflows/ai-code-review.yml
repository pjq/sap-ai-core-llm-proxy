name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created, edited]

permissions:
  contents: read
  pull-requests: write

jobs:
  ai-code-review:
    runs-on: ubuntu-latest
    if: (github.event_name == 'pull_request') || (github.event_name == 'issue_comment' && github.event.issue.pull_request && startsWith(github.event.comment.body, '/'))

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openai PyGithub pyyaml requests

      - name: Get PR diff
        id: get-pr-diff
        if: github.event_name == 'pull_request'
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          
          echo "Fetching PR diff with curl..."
          DIFF_URL="https://github.com/${{ github.repository }}/pull/${PR_NUMBER}.diff"
          curl -L -s $DIFF_URL > pr_diff.txt
          
          # Check if file is empty
          if [ ! -s pr_diff.txt ]; then
            echo "Warning: Downloaded diff is empty or failed to download"
            
            # Try the GitHub API as a backup
            echo "Attempting to use gh CLI to get diff..."
            if [ -z "${{ github.token }}" ]; then
              echo "No GitHub token available for API access"
            else
              echo ${{ github.token }} | gh auth login --with-token
              gh pr diff $PR_NUMBER > pr_diff.txt
            fi
          fi
          
          # Output some debug info
          DIFF_SIZE=$(wc -c < pr_diff.txt)
          echo "Diff size: $DIFF_SIZE bytes"
          head -n 5 pr_diff.txt

      - name: Get comment details
        id: get-comment-details
        if: github.event_name == 'issue_comment'
        run: |
          echo "COMMENT_ID=${{ github.event.comment.id }}" >> $GITHUB_ENV
          echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
          echo "COMMENT_BODY=${{ github.event.comment.body }}" >> $GITHUB_ENV

      - name: Run AI Code Review
        id: ai-review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: python .github/scripts/ai_review.py